on:
  release:
    types:
      - published

env:
  DOTNET_VERSION: 9.0.x

jobs:
  build-app:
    strategy:
      fail-fast: false
      matrix:
        project:
          - Lip.CLI
        runtime:
          - linux-arm64
          - linux-x64
          - osx-arm64
          - osx-x64
          - win-arm64
          - win-x64
        include:
          - runtime: linux-arm64
            runs-on: ubuntu-22.04
          - runtime: linux-x64
            runs-on: ubuntu-latest
          - runtime: osx-arm64
            runs-on: macos-latest
          - runtime: osx-x64
            runs-on: macos-latest
          - runtime: win-arm64
            runs-on: windows-latest
          - runtime: win-x64
            runs-on: windows-latest
    permissions:
      contents: read
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # - if: matrix.runtime == 'linux-arm64'
      #   run: |
      #     sudo dpkg --add-architecture arm64
      #     sudo bash -c 'cat > /etc/apt/sources.list.d/arm64.list <<EOF
      #     deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted
      #     deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted
      #     deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
      #     EOF'
      #     sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
      #     sudo sed -i -e 's/deb mirror/deb [arch=amd64] mirror/g' /etc/apt/sources.list
      #     sudo apt update
      #     sudo apt install -y clang llvm binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu zlib1g-dev:arm64

      - id: get-version
        uses: frabert/replace-string-action@v2
        with:
          pattern: '^v'
          string: ${{ github.event.release.tag_name }}
          replace-with: ''

      - run: >
          dotnet publish ${{ matrix.project }}
          --configuration Release
          --output bin
          --runtime ${{ matrix.runtime }}
          --self-contained true
          -p:PublishSingleFile=true
          -p:Version=${{ steps.get-version.outputs.replaced }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ matrix.project }}-${{ matrix.runtime }}-${{ github.sha }}
          path: bin/

  update-release-notes:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v2

      - uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.extract-release-notes.outputs.release_notes }}

  upload-to-release:
    needs:
      - build-app
      - update-release-notes
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project:
          - Lip.CLI
        runtime:
          - linux-arm64
          - linux-x64
          - osx-arm64
          - osx-x64
          - win-arm64
          - win-x64
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ matrix.project }}-${{ matrix.runtime }}-${{ github.sha }}
          path: artifact/

      - run: |
          cp CHANGELOG.md COPYING README.md artifact/

      - if: startsWith(matrix.runtime, 'linux') == false
        run: |
          zip -r ../${{ github.event.repository.name }}-${{ matrix.runtime }}.zip *
        working-directory: artifact

      - if: startsWith(matrix.runtime, 'linux') == true
        run: |
          tar -czvf ../${{ github.event.repository.name }}-${{ matrix.runtime }}.tar.gz *
        working-directory: artifact

      - if: startsWith(matrix.runtime, 'linux') == false
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ github.event.repository.name }}-${{ matrix.runtime }}.zip

      - if: startsWith(matrix.runtime, 'linux') == true
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ github.event.repository.name }}-${{ matrix.runtime }}.tar.gz
